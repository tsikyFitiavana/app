{"ast":null,"code":"var _jsxFileName = \"/home/bruno/mon-aplie/app/src/forms/SyncValidationForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport Dropzone from 'react-dropzone';\n\nvar SyncValidationForm = function SyncValidationForm(props) {\n  var handleSubmit = props.handleSubmit,\n      pristine = props.pristine,\n      reset = props.reset,\n      submitting = props.submitting;\n  var FILE_FIELD_NAME = 'picture';\n\n  var renderDropzoneInput = function renderDropzoneInput(field) {\n    var files = field.input.value;\n    var dropzoneRef;\n    return React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      style: {\n        width: '200px',\n        height: '200px',\n        borderWidth: '2px',\n        borderColor: 'rgb(102, 102, 102)',\n        borderStyle: 'dashed',\n        borderRadius: '5px',\n        padding: '20px'\n      },\n      name: field.name,\n      onDrop: function onDrop(filesToUpload, e) {\n        return field.input.onChange(filesToUpload);\n      },\n      ref: function ref(node) {\n        dropzoneRef = node;\n      },\n      maxSize: 5242880,\n      multiple: false,\n      accept: 'image/*',\n      className: \"drop-zone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, function (_ref) {\n      var isDragActive = _ref.isDragActive,\n          isDragReject = _ref.isDragReject,\n          acceptedFiles = _ref.acceptedFiles,\n          rejectedFiles = _ref.rejectedFiles;\n\n      if (isDragActive) {\n        return 'This file is authorized';\n      }\n\n      if (isDragReject) {\n        return 'This file is not authorized';\n      }\n\n      return acceptedFiles.length || rejectedFiles.length ? \"Accepted \".concat(acceptedFiles.length, \", rejected \").concat(rejectedFiles.length, \" files\") : 'Try dropping some files.';\n    }), field.meta.touched && field.meta.error && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, field.meta.error), files && Array.isArray(files) && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, files.map(function (file, i) {\n      return React.createElement(\"li\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        key: i,\n        src: file.preview,\n        alt: \"preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, file.name));\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      style: {\n        margin: '5px'\n      },\n      onClick: function onClick() {\n        dropzoneRef.open();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Add An Image\"))));\n  };\n\n  var renderField = function renderField(_ref2) {\n    var input = _ref2.input,\n        label = _ref2.label,\n        type = _ref2.type,\n        _ref2$meta = _ref2.meta,\n        touched = _ref2$meta.touched,\n        error = _ref2$meta.error,\n        warning = _ref2$meta.warning;\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, label), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), touched && (error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, error) || warning && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, warning))));\n  };\n\n  var renderTextArea = function renderTextArea(_ref3) {\n    var input = _ref3.input,\n        _ref3$meta = _ref3.meta,\n        touched = _ref3$meta.touched,\n        error = _ref3$meta.error,\n        warning = _ref3$meta.warning;\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", Object.assign({\n      componentClass: \"textarea\",\n      placeholder: \"write about the project\"\n    }, input, {\n      rows: \"10\",\n      cols: \"40\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), touched && (error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, error) || warning && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, warning))));\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"name\",\n    type: \"text\",\n    component: renderField,\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"description\",\n    type: \"text\",\n    component: renderField,\n    label: \"Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"url\",\n    type: \"text\",\n    component: renderField,\n    label: \"Url\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"about\",\n    type: \"text\",\n    component: renderTextArea,\n    label: \"About\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: FILE_FIELD_NAME,\n    component: renderDropzoneInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    bsStyle: \"primary\",\n    type: \"submit\",\n    disabled: submitting,\n    style: {\n      margin: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    bsStyle: \"danger\",\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    style: {\n      margin: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Clear Values\"))))))));\n};\n\nexport default SyncValidationForm;","map":{"version":3,"sources":["/home/bruno/mon-aplie/app/src/forms/SyncValidationForm.js"],"names":["React","Field","reduxForm","Dropzone","SyncValidationForm","props","handleSubmit","pristine","reset","submitting","FILE_FIELD_NAME","renderDropzoneInput","field","files","input","value","dropzoneRef","width","height","borderWidth","borderColor","borderStyle","borderRadius","padding","name","filesToUpload","e","onChange","node","isDragActive","isDragReject","acceptedFiles","rejectedFiles","length","meta","touched","error","Array","isArray","map","file","i","preview","margin","open","renderField","label","type","warning","renderTextArea"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport Dropzone from 'react-dropzone';\n\nconst SyncValidationForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting} = props;\n    const FILE_FIELD_NAME = 'picture';\n    const renderDropzoneInput = (field) => {\n        const files = field.input.value;\n        let dropzoneRef;\n        return (\n            <div className=\"text-center\">\n              <div>\n                <div>\n              <Dropzone\n                  style={{\n                    width: '200px',\n                    height: '200px',\n                    borderWidth: '2px',\n                    borderColor: 'rgb(102, 102, 102)',\n                    borderStyle: 'dashed',\n                    borderRadius: '5px',\n                    padding: '20px',\n                  }}\n                  name={field.name}\n                  onDrop={(filesToUpload, e) => field.input.onChange(filesToUpload)}\n                  ref={(node) => { dropzoneRef = node; }}\n                  maxSize={5242880}\n                  multiple={false}\n                  accept={'image/*'}\n                  className=\"drop-zone\"\n              >\n                {({isDragActive, isDragReject, acceptedFiles, rejectedFiles}) => {\n                  if (isDragActive) {\n                    return 'This file is authorized';\n                  }\n                  if (isDragReject) {\n                    return 'This file is not authorized';\n                  }\n                  return acceptedFiles.length || rejectedFiles.length\n                      ? `Accepted ${acceptedFiles.length}, rejected ${rejectedFiles.length} files`\n                      : 'Try dropping some files.';\n                }}\n              </Dropzone>\n              {field.meta.touched &&\n              field.meta.error &&\n              <span className=\"error\">{field.meta.error}</span>}\n              {\n                files && Array.isArray(files) && (\n                    <ul>\n                      {files.map((file, i) =>\n                          <li key={i}>\n                            <img key={i}\n                                 src={file.preview} alt=\"preview\"/>\n                            <p>{file.name}</p>\n                          </li>,\n                      )}\n                    </ul>\n                )}\n                </div>\n                <div>\n                  <button type=\"button\" style={{margin: '5px'}}\n                          onClick={() => { dropzoneRef.open(); }}>Add An\n                    Image\n                  </button>\n                </div>\n              </div>\n            </div>\n        );\n      };\n    const renderField = ({input, label, type, meta: {touched, error, warning}}) => (\n        <form>\n          <label>{label}</label>\n          <div>\n            <form  {...input} placeholder={label} type={type}/>\n            {touched && ((error && <span>{error}</span>) ||\n                (warning && <span>{warning}</span>))}\n          </div>\n        </form>\n    );\n    const renderTextArea = ({input, meta: {touched, error, warning}}) => (\n        <form>\n          <label>Content</label>\n          <div>\n            <form componentClass=\"textarea\"\n                         placeholder=\"write about the project\" {...input} rows=\"10\"\n                         cols=\"40\"/>\n            {touched && ((error && <span>{error}</span>) ||\n                (warning && <span>{warning}</span>))}\n          </div>\n        </form>\n    );\n    return (\n        <div style={{margin: '20px'}}>\n          <div className=\"text-left\">\n            <div>\n              <form onSubmit={handleSubmit}>\n                <Field name=\"name\" type=\"text\" component={renderField}\n                       label=\"Name\"/>\n                <Field name=\"description\" type=\"text\" component={renderField}\n                       label=\"Description\"/>\n                <Field name=\"url\" type=\"text\" component={renderField}\n                       label=\"Url\"/>\n                <Field name=\"about\" type=\"text\" component={renderTextArea}\n                       label=\"About\"/>\n                <Field\n                    name={FILE_FIELD_NAME}\n                    component={renderDropzoneInput}\n                />\n                \n                <div className=\"text-center\">\n                  <div>\n                    <div sm={12} md={12}>\n                      <button bsStyle=\"primary\" type=\"submit\"\n                              disabled={submitting} style={{margin: '5px'}}>Submit</button>\n                    </div>\n                  </div>\n                  <div>\n                    <div sm={12} md={12}>\n                      \n                      <button bsStyle=\"danger\" type=\"button\"\n                              disabled={pristine || submitting}\n                              onClick={reset} style={{margin: '5px'}}>Clear\n                        Values\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n    );\n  }\n  export default SyncValidationForm"]},"metadata":{},"sourceType":"module"}