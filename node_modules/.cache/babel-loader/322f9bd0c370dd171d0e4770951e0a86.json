{"ast":null,"code":"import _classCallCheck from \"/home/bruno/mon-aplie/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bruno/mon-aplie/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bruno/mon-aplie/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bruno/mon-aplie/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bruno/mon-aplie/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bruno/mon-aplie/app/src/Vue/Upload/Upload.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\n\nvar Upload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Upload, _Component);\n\n  function Upload() {\n    _classCallCheck(this, Upload);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Upload).apply(this, arguments));\n  }\n\n  _createClass(Upload, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"text-center mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        onDrop: onDrop = function onDrop(acceptedFiles) {\n          console.log(acceptedFiles);\n        },\n        accept: \"image/png, image/gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive,\n            isDragReject = _ref.isDragReject;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        })), !isDragActive && 'Click here or drop a file to upload!', isDragActive && !isDragReject && \"Drop it like it's hot!\", isDragReject && \"File type not accepted, sorry!\");\n      }));\n    }\n  }]);\n\n  return Upload;\n}(Component);\n\nexport default Upload;","map":{"version":3,"sources":["/home/bruno/mon-aplie/app/src/Vue/Upload/Upload.js"],"names":["React","Component","Dropzone","Upload","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","isDragActive","isDragReject"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,M;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACN,QAAA,MAAM,EACJC,MAAM,GAAG,gBAACC,aAAD,EAAmB;AACxBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACD,SAJC;AAMN,QAAA,MAAM,EAAC,sBAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQP;AAAA,YAAEG,YAAF,QAAEA,YAAF;AAAA,YAAgBC,aAAhB,QAAgBA,aAAhB;AAAA,YAA+BC,YAA/B,QAA+BA,YAA/B;AAAA,YAA6CC,YAA7C,QAA6CA,YAA7C;AAAA,eACG,6CAASH,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEG,CAACC,YAAD,IAAiB,sCAFpB,EAGGA,YAAY,IAAI,CAACC,YAAjB,IAAiC,wBAHpC,EAIGA,YAAY,IAAI,gCAJnB,CADH;AAAA,OARO,CADF,CADF;AAqBD;;;;EAvBkBV,S;;AA0BrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone'\n\nclass Upload extends Component {\n  render() {\n    return (\n      <div className=\"text-center mt-5\">\n        <Dropzone\n  onDrop={\n    onDrop = (acceptedFiles) => {\n        console.log(acceptedFiles);\n      }\n}\n  accept=\"image/png, image/gif\"\n>\n{({getRootProps, getInputProps, isDragActive, isDragReject}) => (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      {!isDragActive && 'Click here or drop a file to upload!'}\n      {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n      {isDragReject && \"File type not accepted, sorry!\"}\n    </div>\n  )}\n</Dropzone>\n      </div>\n    );\n  }\n}\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}