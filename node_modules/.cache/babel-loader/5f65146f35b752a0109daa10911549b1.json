{"ast":null,"code":"import _classCallCheck from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bruno/Bureau/app/src/Vue/Upload/Upload.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\n\nvar Upload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Upload, _Component);\n\n  function Upload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Upload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDrop = function (acceptedFiles) {\n      console.log(acceptedFiles);\n    };\n\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"text-center mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        accept: \"image/*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive,\n            isDragReject = _ref.isDragReject;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        })), !isDragActive && 'Click here or drop a file to upload!', isDragActive && !isDragReject && \"Drop it like it's hot!\", isDragReject && \"File type not accepted, sorry!\");\n      }));\n    }\n  }]);\n\n  return Upload;\n}(Component); // // export default Upload;\n// import React from 'react';\n// import Dropzone from 'react-dropzone';\n// import request from 'superagent';\n// const CLOUDINARY_UPLOAD_PRESET = 'vawzbrp6';\n// const CLOUDINARY_UPLOAD_URL = 'https://res.cloudinary.com/tsikyfitiavana/image/upload';\n// class Upload extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       uploadedFile: null,\n//       uploadedFileCloudinaryUrl: ''\n//     };\n//   }\n//   onImageDrop(files) {\n//     this.setState({\n//       uploadedFile: files[0]\n//     });\n//     this.handleImageUpload(files[0]);\n//   }\n//   handleImageUpload(file) {\n//     let upload = request.post(CLOUDINARY_UPLOAD_URL)\n//                      .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n//                      .field('file', file);\n//     upload.end((err, response) => {\n//       if (err) {\n//         console.error(err);\n//       }\n//       if (response.body.secure_url !== '') {\n//         this.setState({\n//           uploadedFileCloudinaryUrl: response.body.secure_url\n//         });\n//       }\n//     });\n//   }\n//   render() {\n//     return (\n//       <form>\n//         <div className=\"FileUpload\">\n//           <Dropzone\n//             onDrop={this.onImageDrop.bind(this)}\n//             multiple={false}\n//             accept=\"image/*\">\n//             <div>Drop an image or click to select a file to upload.</div>\n//           </Dropzone>\n//         </div>\n//         <div>\n//           {this.state.uploadedFileCloudinaryUrl === '' ? null :\n//           <div>\n//             <p>{this.state.uploadedFile.name}</p>\n//             <img src={this.state.uploadedFileCloudinaryUrl} alt='yes'/>\n//           </div>}\n//         </div>\n//       </form>\n//     )\n//   }\n// }\n\n\nexport default Upload;","map":{"version":3,"sources":["/home/bruno/Bureau/app/src/Vue/Upload/Upload.js"],"names":["React","Component","Dropzone","Upload","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","isDragActive","isDragReject"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,M;;;;;;;;;;;;;;;;;;UAEJC,M,GAAS,UAACC,aAAD,EAAmB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACN,QAAA,MAAM,EAAE,KAAKD,MADP;AAEN,QAAA,MAAM,EAAC,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIP;AAAA,YAAEI,YAAF,QAAEA,YAAF;AAAA,YAAgBC,aAAhB,QAAgBA,aAAhB;AAAA,YAA+BC,YAA/B,QAA+BA,YAA/B;AAAA,YAA6CC,YAA7C,QAA6CA,YAA7C;AAAA,eACG,6CAASH,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEG,CAACC,YAAD,IAAiB,sCAFpB,EAGGA,YAAY,IAAI,CAACC,YAAjB,IAAiC,wBAHpC,EAIGA,YAAY,IAAI,gCAJnB,CADH;AAAA,OAJO,CADF,CADF;AAiBD;;;;EAxBkBV,S,GA2BrB;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone'\n\nclass Upload extends Component {\n\n  onDrop = (acceptedFiles) => {\n    console.log(acceptedFiles);\n  }\n\n  render() {\n    return (\n      <div className=\"text-center mt-5\">\n        <Dropzone\n  onDrop={this.onDrop}\n  accept=\"image/*\"\n>\n{({getRootProps, getInputProps, isDragActive, isDragReject}) => (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      {!isDragActive && 'Click here or drop a file to upload!'}\n      {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n      {isDragReject && \"File type not accepted, sorry!\"}\n    </div>\n  )}\n</Dropzone>\n      </div>\n    );\n  }\n}\n\n// // export default Upload;\n\n// import React from 'react';\n// import Dropzone from 'react-dropzone';\n// import request from 'superagent';\n\n// const CLOUDINARY_UPLOAD_PRESET = 'vawzbrp6';\n// const CLOUDINARY_UPLOAD_URL = 'https://res.cloudinary.com/tsikyfitiavana/image/upload';\n\n// class Upload extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       uploadedFile: null,\n//       uploadedFileCloudinaryUrl: ''\n//     };\n//   }\n\n//   onImageDrop(files) {\n//     this.setState({\n//       uploadedFile: files[0]\n//     });\n\n//     this.handleImageUpload(files[0]);\n//   }\n\n//   handleImageUpload(file) {\n//     let upload = request.post(CLOUDINARY_UPLOAD_URL)\n//                      .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n//                      .field('file', file);\n\n//     upload.end((err, response) => {\n//       if (err) {\n//         console.error(err);\n//       }\n\n//       if (response.body.secure_url !== '') {\n//         this.setState({\n//           uploadedFileCloudinaryUrl: response.body.secure_url\n//         });\n//       }\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <form>\n//         <div className=\"FileUpload\">\n//           <Dropzone\n//             onDrop={this.onImageDrop.bind(this)}\n//             multiple={false}\n//             accept=\"image/*\">\n//             <div>Drop an image or click to select a file to upload.</div>\n//           </Dropzone>\n//         </div>\n\n//         <div>\n//           {this.state.uploadedFileCloudinaryUrl === '' ? null :\n//           <div>\n//             <p>{this.state.uploadedFile.name}</p>\n//             <img src={this.state.uploadedFileCloudinaryUrl} alt='yes'/>\n//           </div>}\n//         </div>\n//       </form>\n//     )\n//   }\n// }\nexport default Upload"]},"metadata":{},"sourceType":"module"}