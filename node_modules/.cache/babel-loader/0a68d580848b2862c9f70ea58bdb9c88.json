{"ast":null,"code":"import _classCallCheck from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bruno/Bureau/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bruno/Bureau/app/src/Vue/Upload/Upload.js\";\n// import React, { Component } from 'react';\n// import Dropzone from 'react-dropzone'\n// class Upload extends Component {\n//   onDrop = (acceptedFiles) => {\n//     console.log(acceptedFiles);\n//   }\n//   render() {\n//     return (\n//       <div className=\"text-center mt-5\">\n//         <Dropzone\n//   onDrop={this.onDrop}\n//   accept=\"image/png, image/gif\"\n// >\n// {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\n//     <div {...getRootProps()}>\n//       <input {...getInputProps()} />\n//       {!isDragActive && 'Click here or drop a file to upload!'}\n//       {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n//       {isDragReject && \"File type not accepted, sorry!\"}\n//     </div>\n//   )}\n// </Dropzone>\n//       </div>\n//     );\n//   }\n// }\n// export default Upload;\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\nvar CLOUDINARY_UPLOAD_PRESET = 'vawzbrp6';\nvar CLOUDINARY_UPLOAD_URL = 'https://res.cloudinary.com/tsikyfitiavana/image/upload/v1553772173/sample.jpg';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      uploadedFile: null,\n      uploadedFileCloudinaryUrl: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onImageDrop\",\n    value: function onImageDrop(files) {\n      this.setState({\n        uploadedFile: files[0]\n      });\n      this.handleImageUpload(files[0]);\n    }\n  }, {\n    key: \"handleImageUpload\",\n    value: function handleImageUpload(file) {\n      var _this2 = this;\n\n      var upload = request.post(CLOUDINARY_UPLOAD_URL).field('upload_preset', CLOUDINARY_UPLOAD_PRESET).field('file', file);\n      upload.end(function (err, response) {\n        if (err) {\n          console.error(err);\n        }\n\n        if (response.body.secure_url !== '') {\n          _this2.setState({\n            uploadedFileCloudinaryUrl: response.body.secure_url\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"FileUpload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        onDrop: this.onImageDrop.bind(this),\n        multiple: false,\n        accept: \"image/*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Drop an image or click to select a file to upload.\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.uploadedFileCloudinaryUrl === '' ? null : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.uploadedFile.name), React.createElement(\"img\", {\n        src: this.state.uploadedFileCloudinaryUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/bruno/Bureau/app/src/Vue/Upload/Upload.js"],"names":["React","Dropzone","request","CLOUDINARY_UPLOAD_PRESET","CLOUDINARY_UPLOAD_URL","App","props","state","uploadedFile","uploadedFileCloudinaryUrl","files","setState","handleImageUpload","file","upload","post","field","end","err","response","console","error","body","secure_url","onImageDrop","bind","name","Component"],"mappings":";;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,IAAMC,wBAAwB,GAAG,UAAjC;AACA,IAAMC,qBAAqB,GAAG,+EAA9B;;IAEqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,IADH;AAEXC,MAAAA,yBAAyB,EAAE;AAFhB,KAAb;AAHiB;AAOlB;;;;gCAEWC,K,EAAO;AACjB,WAAKC,QAAL,CAAc;AACZH,QAAAA,YAAY,EAAEE,KAAK,CAAC,CAAD;AADP,OAAd;AAIA,WAAKE,iBAAL,CAAuBF,KAAK,CAAC,CAAD,CAA5B;AACD;;;sCAEiBG,I,EAAM;AAAA;;AACtB,UAAIC,MAAM,GAAGZ,OAAO,CAACa,IAAR,CAAaX,qBAAb,EACKY,KADL,CACW,eADX,EAC4Bb,wBAD5B,EAEKa,KAFL,CAEW,MAFX,EAEmBH,IAFnB,CAAb;AAIAC,MAAAA,MAAM,CAACG,GAAP,CAAW,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC5B,YAAID,GAAJ,EAAS;AACPE,UAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACD;;AAED,YAAIC,QAAQ,CAACG,IAAT,CAAcC,UAAd,KAA6B,EAAjC,EAAqC;AACnC,UAAA,MAAI,CAACZ,QAAL,CAAc;AACZF,YAAAA,yBAAyB,EAAEU,QAAQ,CAACG,IAAT,CAAcC;AAD7B,WAAd;AAGD;AACF,OAVD;AAWD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,MAAM,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,MAAM,EAAC,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAJF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKlB,KAAL,CAAWE,yBAAX,KAAyC,EAAzC,GAA8C,IAA9C,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKF,KAAL,CAAWC,YAAX,CAAwBkB,IAA5B,CADF,EAEE;AAAK,QAAA,GAAG,EAAE,KAAKnB,KAAL,CAAWE,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,CAVF,CADF;AAoBD;;;;EAzD8BT,KAAK,CAAC2B,S;;SAAlBtB,G","sourcesContent":["// import React, { Component } from 'react';\n// import Dropzone from 'react-dropzone'\n\n// class Upload extends Component {\n\n//   onDrop = (acceptedFiles) => {\n//     console.log(acceptedFiles);\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"text-center mt-5\">\n//         <Dropzone\n//   onDrop={this.onDrop}\n//   accept=\"image/png, image/gif\"\n// >\n// {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\n//     <div {...getRootProps()}>\n//       <input {...getInputProps()} />\n//       {!isDragActive && 'Click here or drop a file to upload!'}\n//       {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n//       {isDragReject && \"File type not accepted, sorry!\"}\n//     </div>\n//   )}\n// </Dropzone>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Upload;\n\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\n\nconst CLOUDINARY_UPLOAD_PRESET = 'vawzbrp6';\nconst CLOUDINARY_UPLOAD_URL = 'https://res.cloudinary.com/tsikyfitiavana/image/upload/v1553772173/sample.jpg';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uploadedFile: null,\n      uploadedFileCloudinaryUrl: ''\n    };\n  }\n\n  onImageDrop(files) {\n    this.setState({\n      uploadedFile: files[0]\n    });\n\n    this.handleImageUpload(files[0]);\n  }\n\n  handleImageUpload(file) {\n    let upload = request.post(CLOUDINARY_UPLOAD_URL)\n                     .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n                     .field('file', file);\n\n    upload.end((err, response) => {\n      if (err) {\n        console.error(err);\n      }\n\n      if (response.body.secure_url !== '') {\n        this.setState({\n          uploadedFileCloudinaryUrl: response.body.secure_url\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <div className=\"FileUpload\">\n          <Dropzone\n            onDrop={this.onImageDrop.bind(this)}\n            multiple={false}\n            accept=\"image/*\">\n            <div>Drop an image or click to select a file to upload.</div>\n          </Dropzone>\n        </div>\n\n        <div>\n          {this.state.uploadedFileCloudinaryUrl === '' ? null :\n          <div>\n            <p>{this.state.uploadedFile.name}</p>\n            <img src={this.state.uploadedFileCloudinaryUrl} />\n          </div>}\n        </div>\n      </form>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}